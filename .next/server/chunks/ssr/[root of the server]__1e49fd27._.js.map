{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/graysondeiley/Desktop/Code_Repo1/GolfDashboard/GolfDashboard/src/lib/supabaseClient.jsx"],"sourcesContent":["// lib/supabaseClient.js\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AACxB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/graysondeiley/Desktop/Code_Repo1/GolfDashboard/GolfDashboard/src/components/ui/displayclubs.jsx"],"sourcesContent":["'use client'; // Make sure this is a client-side component\n\nimport { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabaseClient';\n\nconst DisplayClubs = () => {\n    const [user, setUser] = useState(null);\n    const [clubs, setClubs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Fetch user and their clubs\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const {\n                data: { session },\n                error: sessionError,\n            } = await supabase.auth.getSession();\n\n            if (sessionError || !session) {\n                setError('You are not logged in');\n                setLoading(false);\n                return;\n            }\n\n            setUser(session.user);\n\n            const { data: userClubs, error: clubsError } = await supabase\n                .from('clubsanddistances')\n                .select('*')\n                .eq('player_id', session.user.id);\n\n            if (clubsError) {\n                setError('Error fetching clubs');\n                setLoading(false);\n                return;\n            }\n\n            setClubs(userClubs);\n            setLoading(false);\n        };\n\n        fetchUserData();\n    }, []);\n\n    if (loading) {\n        return (\n            <div className=\"bg-gradient-golfbag\">\n                <div className=\"golfbag-container\">\n                    <div className=\"golfbag-loading\">Loading your bag...</div>\n                </div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"bg-gradient-golfbag\">\n                <div className=\"golfbag-container\">\n                    <div className=\"golfbag-error\">{error}</div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"bg-gradient-golfbag\">\n            <div className=\"golfbag-container\">\n                {user && (\n                    <>\n                        <h4 className=\"golfbag-title\">Your Golf Bag</h4>\n                        <ul className=\"golfbag-club-list\">\n                            {clubs.length > 0 ? (\n                                clubs.map((club, index) => (\n                                    <li key={index} className=\"golfbag-club-item\">\n                                        <strong className=\"golfbag-club-name\">{club.club_name}</strong>\n                                        <p className=\"golfbag-club-details\">Average Distance: {club.average_distance_yards} yards</p>\n                                        <p className=\"golfbag-club-details\">Max Distance: {club.max_distance_yards} yards</p>\n                                        <p className=\"golfbag-club-details\">Min Distance: {club.min_distance_yards} yards</p>\n                                        {club.notes && (\n                                            <p className=\"golfbag-club-notes\">Notes: {club.notes}</p>\n                                        )}\n                                    </li>\n                                ))\n                            ) : (\n                                <p className=\"golfbag-empty-message\">Your golf bag is empty. Add some clubs!</p>\n                            )}\n                        </ul>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default DisplayClubs;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA,cAAc,4CAA4C;;;;AAK1D,MAAM,eAAe;IACjB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,6BAA6B;IAC7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,gBAAgB;YAClB,MAAM,EACF,MAAM,EAAE,OAAO,EAAE,EACjB,OAAO,YAAY,EACtB,GAAG,MAAM,6HAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,UAAU;YAElC,IAAI,gBAAgB,CAAC,SAAS;gBAC1B,SAAS;gBACT,WAAW;gBACX;YACJ;YAEA,QAAQ,QAAQ,IAAI;YAEpB,MAAM,EAAE,MAAM,SAAS,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,6HAAA,CAAA,WAAQ,CACxD,IAAI,CAAC,qBACL,MAAM,CAAC,KACP,EAAE,CAAC,aAAa,QAAQ,IAAI,CAAC,EAAE;YAEpC,IAAI,YAAY;gBACZ,SAAS;gBACT,WAAW;gBACX;YACJ;YAEA,SAAS;YACT,WAAW;QACf;QAEA;IACJ,GAAG,EAAE;IAEL,IAAI,SAAS;QACT,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BAAkB;;;;;;;;;;;;;;;;IAIjD;IAEA,IAAI,OAAO;QACP,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BAAiB;;;;;;;;;;;;;;;;IAIhD;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACV,sBACG;;kCACI,8OAAC;wBAAG,WAAU;kCAAgB;;;;;;kCAC9B,8OAAC;wBAAG,WAAU;kCACT,MAAM,MAAM,GAAG,IACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBACb,8OAAC;gCAAe,WAAU;;kDACtB,8OAAC;wCAAO,WAAU;kDAAqB,KAAK,SAAS;;;;;;kDACrD,8OAAC;wCAAE,WAAU;;4CAAuB;4CAAmB,KAAK,sBAAsB;4CAAC;;;;;;;kDACnF,8OAAC;wCAAE,WAAU;;4CAAuB;4CAAe,KAAK,kBAAkB;4CAAC;;;;;;;kDAC3E,8OAAC;wCAAE,WAAU;;4CAAuB;4CAAe,KAAK,kBAAkB;4CAAC;;;;;;;oCAC1E,KAAK,KAAK,kBACP,8OAAC;wCAAE,WAAU;;4CAAqB;4CAAQ,KAAK,KAAK;;;;;;;;+BANnD;;;;sDAWb,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;;;;;;;AAQrE;uCAEe","debugId":null}}]
}